@startuml MathEngine

interface Function {
    void accept(Visitor visitor);
}


class Variable implements Function {
    - String name;
    - double value;

    // getters and setters
}
class Number implements Function {
    - value
}

class Addition implements Function {
    + solve()
}
class Subtraction implements Function {
    + solve()
}
class Power implements Function {
    + solve()
}
class Product implements Function {
    + solve()
}
class Division implements Function {
    + solve()
}
class SquareRoot implements Function {
    + solve()
}


interface Visitor {
    void visit(Function function);
    void visit(Operation operation);
    void visit(Addition addition);
    // etc visit methods
}

class PrintVisitor implements Visitor {
    // all visitors for each function
}
class SolveVisitor implements Visitor {
    // solve for functions with or without variables
}

Visitor -> Function

Function <|-- Parameter

@enduml

' La funciÃ³n en si tiene que ser un composite y
' algunas operaciones como printear, resolver o
' listar variables pueden hacerse con visitors