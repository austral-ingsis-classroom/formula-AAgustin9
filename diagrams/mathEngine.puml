@startuml MathEngine

interface Function {

    void accept(Visitor visitor);
}

interface Parameter {
    // getter y setter
}

class Variable implements Parameter {
    - String name;
    - double value;

    // getters and setters
}
class Constant implements Parameter {
    - value
}

interface Operation implements Function  {
    + solve()
}


class Addition implements Operation {
    + solve()
}
class Subtraction implements Operation {
    + solve()
}
class Power implements Operation {
    + solve()
}
class Product implements Operation {
    + solve()
}
class Division implements Operation {
    + solve()
}
class SquareRoot implements Operation {
    + solve()
}


interface Visitor {
    void visit(Function function);
    void visit(Operation operation);
    void visit(Addition addition);
    // Add visit methods for other operations
}

class PrintVisitor implements Visitor {
    // implementation
}
class CalculateVisitor implements Visitor {
    + calculate()
}

Visitor -> Function

Function <|-- Parameter

@enduml

' La funciÃ³n en si tiene que ser un composite y
' algunas operaciones como printear, resolver o
' listar variables pueden hacerse con visitors